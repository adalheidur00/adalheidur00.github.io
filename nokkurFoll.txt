Vegasalt 
    x += y
    theta = 45 * Math.sin(x)

    rot += 1
    var mv = mat4()

    mv = mult(mv, rotateZ(theta))
    mv = mult(mv, rotateY(rot))
    mv = mult(mv, scalem(1.0,0.05,0.05))
    gl.uniformMatrix4fv(matrixLoc, false, flatten(mv));
    gl.drawArrays( gl.TRIANGLES, 0, numVertices );

   var mv1 = mat4()

    mv1 = mult(mv1, translate(0.0,-0.25,0.05))
    mv1 = mult(mv1,scalem(0.05,0.5,0.5)) 
    gl.uniformMatrix4fv(matrixLoc, false, flatten(mv1));
    gl.drawArrays( gl.TRIANGLES, 0, numVertices );

    mv1 = mult(mv1, translate(0.0,-0.5,0.0))
    mv1 = mult(mv1, scalem(5.0,0.5,1))

    gl.uniformMatrix4fv(matrixLoc, false, flatten(mv1));
    gl.drawArrays( gl.TRIANGLES, 0, numVertices );


FÃ³tleggur

 if (x < 90){
        x+= 1
    }

    var mv = mat4()

    mv = mult(mv, translate(0.0,0.0,0.0))
    mv = mult(mv, rotateZ(x))
    
    mv1 = mult(mv, translate(0.0,-0.3,0.0))
    mv1 = mult(mv1, scalem(0.2,0.6,0.5))

    gl.uniformMatrix4fv(matrixLoc, false, flatten(mv1));
    gl.drawArrays( gl.TRIANGLES, 0, numVertices ); 

    mv = mult(mv, translate(0.0,-0.6,0.0)) 
    mv = mult(mv, rotateZ(-x)) 

    mv2 = mult(mv, translate(-0.0,-0.2,0.0))
    mv2 = mult(mv2, scalem(0.2,0.6,0.5))
    gl.uniformMatrix4fv(matrixLoc, false, flatten(mv2));
    gl.drawArrays( gl.TRIANGLES, 0, numVertices ); 

    mv3 = mult(mv, translate(0.1,-0.5,0.0)) 
    mv3 = mult(mv3, scalem(0.4,0.2,0.5))
    gl.uniformMatrix4fv(matrixLoc, false, flatten(mv3));
    gl.drawArrays( gl.TRIANGLES, 0, numVertices );

    var mvb = mat4()
    mvb = mult(mvb, translate(0.0,0.3,0.0))
    mvb = mult(mvb, scalem(0.5,0.8,0.5))
    gl.uniformMatrix4fv(matrixLoc, false, flatten(mvb));
    gl.drawArrays( gl.TRIANGLES, 0, numVertices );